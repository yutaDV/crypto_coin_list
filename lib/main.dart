import 'dart:math';import 'package:flutter/material.dart';import 'package:flutter_svg/flutter_svg.dart';void main() {  runApp(const CryptoCurrenciesListApp());}class CryptoCurrenciesListApp extends StatelessWidget {  const CryptoCurrenciesListApp(      {Key? key}); // This widget is the root of your application.  @override  Widget build(BuildContext context) {    return MaterialApp(      title: 'Crypto Curencies List',      theme: ThemeData(          primarySwatch: Colors.lime,          scaffoldBackgroundColor: const Color(0x3B3D3D4D),          dividerColor: Colors.white10,          appBarTheme: AppBarTheme(              backgroundColor: const Color(0x3B3D3D4D),              titleTextStyle: TextStyle(                  color: Colors.white,                  fontSize: 20,                  fontWeight: FontWeight.w700)),          listTileTheme: const ListTileThemeData(iconColor: Colors.white),          textTheme: TextTheme(              bodyMedium: const TextStyle(                color: Colors.white70,                fontWeight: FontWeight.w500,                fontSize: 20,              ),              labelSmall: TextStyle(                color: Colors.white60,                fontWeight: FontWeight.w700,              ))),      routes: {        '/': (context) => CryptoListScreen(),        '/coin': (context) => CryptoCoinScreen(),      },    );  }}class CryptoListScreen extends StatefulWidget {  const CryptoListScreen({Key? key});  @override  State<CryptoListScreen> createState() => _CryptoListScreenState();}class _CryptoListScreenState extends State<CryptoListScreen> {  @override  Widget build(BuildContext context) {    final theme = Theme.of(context);    return Scaffold(      appBar: AppBar(        title: Text('Crypto Curencies List'),        leading: Icon(Icons.arrow_back),      ),      body: ListView.separated(          itemCount: 10,          separatorBuilder: (context, index) => const Divider(),          itemBuilder: (context, i) {            const coinName = 'Bitcoin';            return ListTile(              leading: SvgPicture.asset(                'assets/svg/Bitcoin.svg',                height: 25,                width: 25,              ),              title: Text(                coinName,                style: theme.textTheme.bodyMedium,              ),              subtitle: Text(                '20000\$',                style: theme.textTheme.labelSmall,              ),              trailing: const Icon(Icons.arrow_forward_ios),              onTap: () {                Navigator.of(context).pushNamed(                  '/coin',                  arguments: coinName,                );              },            );          }),    );  }}class CryptoCoinScreen extends StatefulWidget {  const CryptoCoinScreen({Key? key});  @override  State<CryptoCoinScreen> createState() => _CryptoCoinScreenState();}class _CryptoCoinScreenState extends State<CryptoCoinScreen> {  String? coinName;  @override  void didChangeDependencies() {    final args = ModalRoute.of(context)?.settings.arguments;    assert(args != null && args is String, ' You must provide String args');    coinName = args as String;    super.didChangeDependencies();  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(title: Text("Bitcoin")),    );  }}